jQuery(document).keydown(function(a){if((a.ctrlKey||a.metaKey)&&13==a.which)return a.preventDefault(),compile(),!1});const hintText=["Press Ctrl / Cmd + Enter for compiling","Press Ctrl / Cmd + E for showing code auto complete"];$("#compile").click(function(){compile()}),$("#clear").click(function(){$("#regex").val(""),$("#flag").val(""),$("#match_string").val(""),$("#match_string").highlightWithinTextarea("update")});const codemirror=CodeMirror.fromTextArea(document.getElementById("verbal_regex"),{lineNumbers:!0,styleActiveLine:!0,theme:"dracula",lineWrapping:!0});$("#match_string").highlightWithinTextarea({highlight:"",className:"pick-color"}),codemirror.on("change",function(){codemirror.save()}),codemirror.setCursor({line:2,ch:1});function showSnippet(a){if(snippet(),null!=a.state.completionActive){let b=a.state.completionActive.data;CodeMirror.on(b,"pick",function(a){if(-1===a.text.indexOf("\n")){const a=codemirror.getCursor(),b=a.ch,c=a.line;codemirror.setCursor({line:c,ch:b-2})}})}}codemirror.setOption("extraKeys",{"Cmd-E":function(a){showSnippet(a)},"Ctrl-E":function(a){showSnippet(a)}});const snippets=[{text:"VerEx()\n",displayText:"VerEx()               Head of verbal regex string (also used in recursion case)"},{text:".find('')",displayText:".find(value)          Find exactly the given value"},{text:".maybe('')",displayText:".maybe(value)         0 or 1 times"},{text:".then('')",displayText:".then(value)          Shorthand for find"},{text:".anyOf('')",displayText:".anyOf(value)         Matches any char in value"},{text:".any('')",displayText:".any(value)           Shorthand for anyOf"},{text:".lineBreak()\n",displayText:".lineBreak()          Matches any linebreak"},{text:".br()\n",displayText:".br()                 Shorthand for linebreak()"},{text:".tab()\n",displayText:".tab()                Match tab char"},{text:".word()\n",displayText:".word()               Matches at least one word"},{text:".digit()\n",displayText:".digit()              Matches at least one digit"},{text:".whiteSpace()\n",displayText:".whitespace()         Matches at least one whitespace"},{text:".repeatPrevious()\n",displayText:".repeatPrevious()     Repeats the previous item exactly n times or between n and m times."},{text:".oneOrMore()\n",displayText:".oneOrMore()          Repeats the previous at least once"},{text:".beginCapture()\n",displayText:".beginCapture()       Starts a capturing group"},{text:".endCapture()\n",displayText:".endCapture()         Ends a capturing group"},{text:".endOfLine()\n",displayText:".endOfLine()          Append \"$\" at end of expression"},{text:".startOfLine()\n",displayText:".startOfLine()        Append \"^\" at start of expression"},{text:".something()\n",displayText:".something()          Any character at least one time"},{text:".somethingBut('')\n",displayText:".somethingBut(value)  Any character at least one time except for these characters"},{text:".anything()\n",displayText:".anything()           Matches everything"},{text:".anythingBut('')",displayText:".anythingBut(value)   Matches everything excepting letter in given value"},{text:".withAnyCase()\n",displayText:".withAnyCase()        Ignore case insensitive (append modifier \"i\")"},{text:".stopAtFirst()\n",displayText:".stopAtFirst()        Stop at first match (remove modifier \"g\")"},{text:".searchOneLine()\n",displayText:".searchOneLine()      Only search in one line (remove modifier \"m\")"},{text:".range('', '')",displayText:".range(from, to)      Add expression to match a range (or multiply ranges)"},{text:".add('')"},{text:".multiple('')"},{text:".or()\n"}];function snippet(){CodeMirror.showHint(codemirror,function(){const a=codemirror.getCursor(),b=codemirror.getTokenAt(a);let c=0;"."===codemirror.getTokenAt({line:a.line,ch:a.ch-b.string.length}).string&&(c=1);const d=")"===b.string?b.start+1:b.start,e=a.ch,f=a.line,g=b.string,h=snippets.filter(function(a){return 0<=a.text.toLowerCase().indexOf(g.toLowerCase())});return{list:h.length?h:snippets,from:CodeMirror.Pos(f,d-c),to:CodeMirror.Pos(f,e)}},{completeSingle:!1})}function validateVerbalString(a){if(a=a.replace("\n","").replace("\t",""),"VerEx()"===a)throw"Invalid verbal syntax: missing method";if(-1!==a.indexOf("''"))throw"Invalid verbal syntax: missing value";if(0<a.indexOf("VerEx()VerEx()"))throw"Invalid verbal syntax: VerEx";if(0===a.indexOf("VerEx().anything"))throw"Invalid verbal syntax: anything";if(0===a.indexOf("VerEx().endOfLine"))throw"Invalid verbal syntax: endOfLine";if(0===a.indexOf("VerEx().searchOneLine"))throw"Invalid verbal syntax: searchOneLine";if(0===a.indexOf("VerEx().multiple"))throw"Invalid verbal syntax: multiple";if(0===a.indexOf("VerEx().or"))throw"Invalid verbal syntax: or";if(0===a.indexOf("VerEx().withAnyCase"))throw"Invalid verbal syntax: withAnyCase"}function compile(){let verbalRegex=$("#verbal_regex").val(),tester=VerEx();try{validateVerbalString(verbalRegex),eval("tester = "+verbalRegex);let regexString=tester.toString(),flagPart=regexString.split("/").pop(),regexPart="";regexPart=void 0===flagPart?regexString.substr(1,regexString.length-1):regexString.substr(1,regexString.length-2-flagPart.length),$("#regex").val(regexPart),$("#flag").val(flagPart);const re=new RegExp(regexPart,flagPart);$("#match_string").highlightWithinTextarea({highlight:re,className:"pick-color"})}catch(a){alert("Error on converting verbal string to Regex:\n"+a)}}let count=0;setInterval(function(){++count,count%=2,$("#usage-hint").text(hintText[count])},5e3);const textarea=document.getElementById("match_string");tabOverride.autoIndent(!1),tabOverride.set(textarea),$("#regex").click(function(){this.select()}),$("#flag").click(function(){this.select()});